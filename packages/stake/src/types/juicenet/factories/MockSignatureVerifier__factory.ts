/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockSignatureVerifier,
  MockSignatureVerifierInterface,
} from "../MockSignatureVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "mockIsValidSign",
        type: "bool",
      },
    ],
    name: "setIsValidSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805460ff1916600117905534801561001d57600080fd5b506101e88061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631626ba7e1461003b578063a760fba61461006b575b600080fd5b61004e6100493660046100ce565b61008e565b6040516001600160e01b0319909116815260200160405180910390f35b61008c610079366004610189565b6000805460ff1916911515919091179055565b005b6000805460ff16156100a85750630b135d3f60e11b6100b2565b5063185898d960e21b5b92915050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156100e157600080fd5b82359150602083013567ffffffffffffffff8082111561010057600080fd5b818501915085601f83011261011457600080fd5b813581811115610126576101266100b8565b604051601f8201601f19908116603f0116810190838211818310171561014e5761014e6100b8565b8160405282815288602084870101111561016757600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561019b57600080fd5b813580151581146101ab57600080fd5b939250505056fea2646970667358221220a195ebe484e8feee6dd70f7d5e11985c4dcee240043315bd6eab9ff5bb02bbd564736f6c634300080a0033";

export class MockSignatureVerifier__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockSignatureVerifier> {
    return super.deploy(overrides || {}) as Promise<MockSignatureVerifier>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockSignatureVerifier {
    return super.attach(address) as MockSignatureVerifier;
  }
  connect(signer: Signer): MockSignatureVerifier__factory {
    return super.connect(signer) as MockSignatureVerifier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSignatureVerifierInterface {
    return new utils.Interface(_abi) as MockSignatureVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockSignatureVerifier {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockSignatureVerifier;
  }
}
