"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.VanillaV1API01__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "numEth",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "numToken",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "blockTimeDeadline",
                type: "uint256",
            },
        ],
        name: "buy",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "numToken",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "blockTimeDeadline",
                type: "uint256",
            },
        ],
        name: "depositAndBuy",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "epoch",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "numEth",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "numTokensSold",
                type: "uint256",
            },
        ],
        name: "estimateReward",
        outputs: [
            {
                internalType: "uint256",
                name: "profitablePrice",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "avgBlock",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "htrs",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "vpc",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "reward",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        name: "isTokenRewarded",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "reserveLimit",
        outputs: [
            {
                internalType: "uint128",
                name: "",
                type: "uint128",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "numToken",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "numEthLimit",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "blockTimeDeadline",
                type: "uint256",
            },
        ],
        name: "sell",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "numToken",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "numEthLimit",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "blockTimeDeadline",
                type: "uint256",
            },
        ],
        name: "sellAndWithdraw",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        name: "tokenPriceData",
        outputs: [
            {
                internalType: "uint256",
                name: "ethSum",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "tokenSum",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "weightedBlockSum",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "latestBlock",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "vnlContract",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        name: "wethReserves",
        outputs: [
            {
                internalType: "uint128",
                name: "",
                type: "uint128",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var VanillaV1API01__factory = /** @class */ (function () {
    function VanillaV1API01__factory() {
    }
    VanillaV1API01__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    VanillaV1API01__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    VanillaV1API01__factory.abi = _abi;
    return VanillaV1API01__factory;
}());
exports.VanillaV1API01__factory = VanillaV1API01__factory;
